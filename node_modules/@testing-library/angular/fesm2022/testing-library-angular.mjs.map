{"version":3,"file":"testing-library-angular.mjs","sources":["../../../../projects/testing-library/src/lib/config.ts","../../../../projects/testing-library/src/lib/testing-library.ts","../../../../projects/testing-library/src/public_api.ts","../../../../projects/testing-library/testing-library-angular.ts"],"sourcesContent":["import { Config } from './models';\n\nlet config: Config = {\n  dom: {},\n  defaultImports: [],\n};\n\nexport function configure(newConfig: Partial<Config> | ((config: Partial<Config>) => Partial<Config>)) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(config);\n  }\n\n  // Merge the incoming config delta\n  config = {\n    ...config,\n    ...newConfig,\n  };\n}\n\nexport function getConfig() {\n  return config;\n}\n","import {\n  ApplicationInitStatus,\n  ChangeDetectorRef,\n  Component,\n  isStandalone,\n  NgZone,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n  Type,\n} from '@angular/core';\nimport { ComponentFixture, DeferBlockBehavior, DeferBlockState, TestBed, tick } from '@angular/core/testing';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport type { BoundFunctions, Queries } from '@testing-library/dom';\nimport {\n  configure as dtlConfigure,\n  getQueriesForElement as dtlGetQueriesForElement,\n  prettyDOM as dtlPrettyDOM,\n  queries as dtlQueries,\n  screen as dtlScreen,\n  waitFor as dtlWaitFor,\n  waitForElementToBeRemoved as dtlWaitForElementToBeRemoved,\n  waitForOptions as dtlWaitForOptions,\n  within as dtlWithin,\n} from '@testing-library/dom';\nimport { ComponentOverride, RenderComponentOptions, RenderResult, RenderTemplateOptions } from './models';\nimport { getConfig } from './config';\n\nconst mountedFixtures = new Set<ComponentFixture<any>>();\nconst safeInject = TestBed.inject || TestBed.get;\n\nexport async function render<ComponentType>(\n  component: Type<ComponentType>,\n  renderOptions?: RenderComponentOptions<ComponentType>,\n): Promise<RenderResult<ComponentType, ComponentType>>;\nexport async function render<WrapperType = WrapperComponent>(\n  template: string,\n  renderOptions?: RenderTemplateOptions<WrapperType>,\n): Promise<RenderResult<WrapperType>>;\n\nexport async function render<SutType, WrapperType = SutType>(\n  sut: Type<SutType> | string,\n  renderOptions: RenderComponentOptions<SutType> | RenderTemplateOptions<WrapperType> = {},\n): Promise<RenderResult<SutType>> {\n  const { dom: domConfig, ...globalConfig } = getConfig();\n  const {\n    detectChangesOnRender = true,\n    autoDetectChanges = true,\n    declarations = [],\n    imports = [],\n    providers = [],\n    schemas = [],\n    queries,\n    wrapper = WrapperComponent as Type<WrapperType>,\n    componentProperties = {},\n    componentInputs = {},\n    componentOutputs = {},\n    componentProviders = [],\n    childComponentOverrides = [],\n    componentImports: componentImports,\n    excludeComponentDeclaration = false,\n    routes = [],\n    removeAngularAttributes = false,\n    defaultImports = [],\n    initialRoute = '',\n    deferBlockStates = undefined,\n    deferBlockBehavior = undefined,\n    configureTestBed = () => {\n      /* noop*/\n    },\n  } = { ...globalConfig, ...renderOptions };\n\n  dtlConfigure({\n    eventWrapper: (cb) => {\n      const result = cb();\n      if (autoDetectChanges) {\n        detectChangesForMountedFixtures();\n      }\n      return result;\n    },\n    ...domConfig,\n  });\n\n  TestBed.configureTestingModule({\n    declarations: addAutoDeclarations(sut, {\n      declarations,\n      excludeComponentDeclaration,\n      wrapper,\n    }),\n    imports: addAutoImports(sut, {\n      imports: imports.concat(defaultImports),\n      routes,\n    }),\n    providers: [...providers],\n    schemas: [...schemas],\n    deferBlockBehavior: deferBlockBehavior ?? DeferBlockBehavior.Manual,\n  });\n  overrideComponentImports(sut, componentImports);\n  overrideChildComponentProviders(childComponentOverrides);\n\n  configureTestBed(TestBed);\n\n  await TestBed.compileComponents();\n\n  componentProviders\n    .reduce((acc, provider) => acc.concat(provider), [] as any[])\n    .forEach((p: any) => {\n      const { provide, ...provider } = p;\n      TestBed.overrideProvider(provide, provider);\n    });\n\n  const componentContainer = createComponentFixture(sut, wrapper);\n\n  const zone = safeInject(NgZone);\n  const router = safeInject(Router);\n  const _navigate = async (elementOrPath: Element | string, basePath = ''): Promise<boolean> => {\n    const href = typeof elementOrPath === 'string' ? elementOrPath : elementOrPath.getAttribute('href');\n    const [path, params] = (basePath + href).split('?');\n    const queryParams = params\n      ? params.split('&').reduce((qp, q) => {\n          const [key, value] = q.split('=');\n          const currentValue = qp[key];\n          if (typeof currentValue === 'undefined') {\n            qp[key] = value;\n          } else if (Array.isArray(currentValue)) {\n            qp[key] = [...currentValue, value];\n          } else {\n            qp[key] = [currentValue, value];\n          }\n          return qp;\n        }, {} as Record<string, string | string[]>)\n      : undefined;\n\n    const navigateOptions: NavigationExtras | undefined = queryParams\n      ? {\n          queryParams,\n        }\n      : undefined;\n\n    const doNavigate = () => {\n      return navigateOptions ? router?.navigate([path], navigateOptions) : router?.navigate([path]);\n    };\n\n    let result;\n\n    if (zone) {\n      await zone.run(() => (result = doNavigate()));\n    } else {\n      result = doNavigate();\n    }\n    return result ?? false;\n  };\n\n  if (initialRoute) await _navigate(initialRoute);\n\n  if (typeof router?.initialNavigation === 'function') {\n    if (zone) {\n      zone.run(() => router.initialNavigation());\n    } else {\n      router.initialNavigation();\n    }\n  }\n\n  let detectChanges: () => void;\n\n  const fixture = await renderFixture(componentProperties, componentInputs, componentOutputs);\n\n  if (deferBlockStates) {\n    if (Array.isArray(deferBlockStates)) {\n      for (const deferBlockState of deferBlockStates) {\n        await renderDeferBlock(fixture, deferBlockState.deferBlockState, deferBlockState.deferBlockIndex);\n      }\n    } else {\n      await renderDeferBlock(fixture, deferBlockStates);\n    }\n  }\n\n  let renderedPropKeys = Object.keys(componentProperties);\n  let renderedInputKeys = Object.keys(componentInputs);\n  let renderedOutputKeys = Object.keys(componentOutputs);\n  const rerender = async (\n    properties?: Pick<\n      RenderTemplateOptions<SutType>,\n      'componentProperties' | 'componentInputs' | 'componentOutputs' | 'detectChangesOnRender'\n    > & { partialUpdate?: boolean },\n  ) => {\n    const newComponentInputs = properties?.componentInputs ?? {};\n    const changesInComponentInput = update(\n      fixture,\n      renderedInputKeys,\n      newComponentInputs,\n      setComponentInputs,\n      properties?.partialUpdate ?? false,\n    );\n    renderedInputKeys = Object.keys(newComponentInputs);\n\n    const newComponentOutputs = properties?.componentOutputs ?? {};\n    for (const outputKey of renderedOutputKeys) {\n      if (!Object.prototype.hasOwnProperty.call(newComponentOutputs, outputKey)) {\n        delete (fixture.componentInstance as any)[outputKey];\n      }\n    }\n    setComponentOutputs(fixture, newComponentOutputs);\n    renderedOutputKeys = Object.keys(newComponentOutputs);\n\n    const newComponentProps = properties?.componentProperties ?? {};\n    const changesInComponentProps = update(\n      fixture,\n      renderedPropKeys,\n      newComponentProps,\n      setComponentProperties,\n      properties?.partialUpdate ?? false,\n    );\n    renderedPropKeys = Object.keys(newComponentProps);\n\n    if (hasOnChangesHook(fixture.componentInstance)) {\n      fixture.componentInstance.ngOnChanges({\n        ...changesInComponentInput,\n        ...changesInComponentProps,\n      });\n    }\n\n    if (properties?.detectChangesOnRender !== false) {\n      fixture.componentRef.injector.get(ChangeDetectorRef).detectChanges();\n    }\n  };\n\n  const navigate = async (elementOrPath: Element | string, basePath = ''): Promise<boolean> => {\n    const result = await _navigate(elementOrPath, basePath);\n    detectChanges();\n    return result;\n  };\n\n  return {\n    fixture,\n    detectChanges: () => detectChanges(),\n    navigate,\n    rerender,\n    renderDeferBlock: async (deferBlockState: DeferBlockState, deferBlockIndex?: number) => {\n      await renderDeferBlock(fixture, deferBlockState, deferBlockIndex);\n    },\n    debugElement: fixture.debugElement,\n    container: fixture.nativeElement,\n    debug: (element = fixture.nativeElement, maxLength, options) =>\n      Array.isArray(element)\n        ? element.forEach((e) => console.log(dtlPrettyDOM(e, maxLength, options)))\n        : console.log(dtlPrettyDOM(element, maxLength, options)),\n    ...replaceFindWithFindAndDetectChanges(dtlGetQueriesForElement(fixture.nativeElement, queries)),\n  };\n\n  async function renderFixture(\n    properties: Partial<SutType>,\n    inputs: Partial<SutType>,\n    outputs: Partial<SutType>,\n  ): Promise<ComponentFixture<SutType>> {\n    const createdFixture = await createComponent(componentContainer);\n    setComponentProperties(createdFixture, properties);\n    setComponentInputs(createdFixture, inputs);\n    setComponentOutputs(createdFixture, outputs);\n\n    if (removeAngularAttributes) {\n      createdFixture.nativeElement.removeAttribute('ng-version');\n      const idAttribute = createdFixture.nativeElement.getAttribute('id');\n      if (idAttribute && idAttribute.startsWith('root')) {\n        createdFixture.nativeElement.removeAttribute('id');\n      }\n    }\n\n    mountedFixtures.add(createdFixture);\n\n    let isAlive = true;\n    createdFixture.componentRef.onDestroy(() => (isAlive = false));\n\n    if (hasOnChangesHook(createdFixture.componentInstance) && Object.keys(properties).length > 0) {\n      const changes = getChangesObj(null, componentProperties);\n      createdFixture.componentInstance.ngOnChanges(changes);\n    }\n\n    detectChanges = () => {\n      if (isAlive) {\n        createdFixture.detectChanges();\n      }\n    };\n\n    if (detectChangesOnRender) {\n      detectChanges();\n    }\n\n    return createdFixture;\n  }\n}\n\nasync function createComponent<SutType>(component: Type<SutType>): Promise<ComponentFixture<SutType>> {\n  /* Make sure angular application is initialized before creating component */\n  await safeInject(ApplicationInitStatus).donePromise;\n  return TestBed.createComponent(component);\n}\n\nfunction createComponentFixture<SutType, WrapperType>(\n  sut: Type<SutType> | string,\n  wrapper: Type<WrapperType>,\n): Type<any> {\n  if (typeof sut === 'string') {\n    TestBed.overrideTemplate(wrapper, sut);\n    return wrapper;\n  }\n  return sut;\n}\n\nfunction setComponentProperties<SutType>(\n  fixture: ComponentFixture<SutType>,\n  componentProperties: RenderTemplateOptions<SutType, any>['componentProperties'] = {},\n) {\n  for (const key of Object.keys(componentProperties)) {\n    const descriptor = Object.getOwnPropertyDescriptor((fixture.componentInstance as any).constructor.prototype, key);\n    let _value = componentProperties[key];\n    const defaultGetter = () => _value;\n    const extendedSetter = (value: any) => {\n      _value = value;\n      descriptor?.set?.call(fixture.componentInstance, _value);\n      fixture.detectChanges();\n    };\n\n    Object.defineProperty(fixture.componentInstance, key, {\n      get: descriptor?.get || defaultGetter,\n      set: extendedSetter,\n      // Allow the property to be defined again later.\n      // This happens when the component properties are updated after initial render.\n      // For Jest this is `true` by default, for Karma and a real browser the default is `false`\n      configurable: true,\n    });\n\n    descriptor?.set?.call(fixture.componentInstance, _value);\n  }\n  return fixture;\n}\n\nfunction setComponentOutputs<SutType>(\n  fixture: ComponentFixture<SutType>,\n  componentOutputs: RenderTemplateOptions<SutType, any>['componentOutputs'] = {},\n) {\n  for (const [name, value] of Object.entries(componentOutputs)) {\n    (fixture.componentInstance as any)[name] = value;\n  }\n}\n\nfunction setComponentInputs<SutType>(\n  fixture: ComponentFixture<SutType>,\n  componentInputs: RenderTemplateOptions<SutType>['componentInputs'] = {},\n) {\n  for (const [name, value] of Object.entries(componentInputs)) {\n    fixture.componentRef.setInput(name, value);\n  }\n}\n\nfunction overrideComponentImports<SutType>(sut: Type<SutType> | string, imports: (Type<any> | any[])[] | undefined) {\n  if (imports) {\n    if (typeof sut === 'function' && isStandalone(sut)) {\n      TestBed.overrideComponent(sut, { set: { imports } });\n    } else {\n      throw new Error(\n        `Error while rendering ${sut}: Cannot specify componentImports on a template or non-standalone component.`,\n      );\n    }\n  }\n}\n\nfunction overrideChildComponentProviders(componentOverrides: ComponentOverride<any>[]) {\n  componentOverrides?.forEach(({ component, providers }) => {\n    TestBed.overrideComponent(component, { set: { providers } });\n  });\n}\n\nfunction hasOnChangesHook<SutType>(componentInstance: SutType): componentInstance is SutType & OnChanges {\n  return (\n    componentInstance !== null &&\n    typeof componentInstance === 'object' &&\n    'ngOnChanges' in componentInstance &&\n    typeof (componentInstance as SutType & OnChanges).ngOnChanges === 'function'\n  );\n}\n\nfunction getChangesObj(oldProps: Record<string, any> | null, newProps: Record<string, any>) {\n  const isFirstChange = oldProps === null;\n  return Object.keys(newProps).reduce<SimpleChanges>(\n    (changes, key) => ({\n      ...changes,\n      [key]: new SimpleChange(isFirstChange ? null : oldProps[key], newProps[key], isFirstChange),\n    }),\n    {} as Record<string, any>,\n  );\n}\n\nfunction update<SutType>(\n  fixture: ComponentFixture<SutType>,\n  prevRenderedKeys: string[],\n  newValues: Record<string, any>,\n  updateFunction: (\n    fixture: ComponentFixture<SutType>,\n    values: RenderTemplateOptions<SutType>['componentInputs' | 'componentProperties'],\n  ) => void,\n  partialUpdate: boolean,\n) {\n  const componentInstance = fixture.componentInstance as Record<string, any>;\n  const simpleChanges: SimpleChanges = {};\n\n  for (const key of prevRenderedKeys) {\n    if (!partialUpdate && !Object.prototype.hasOwnProperty.call(newValues, key)) {\n      simpleChanges[key] = new SimpleChange(componentInstance[key], undefined, false);\n      delete componentInstance[key];\n    }\n  }\n\n  for (const [key, value] of Object.entries(newValues)) {\n    if (value !== componentInstance[key]) {\n      simpleChanges[key] = new SimpleChange(componentInstance[key], value, false);\n    }\n  }\n\n  updateFunction(fixture, newValues);\n\n  return simpleChanges;\n}\n\nfunction addAutoDeclarations<SutType>(\n  sut: Type<SutType> | string,\n  {\n    declarations = [],\n    excludeComponentDeclaration,\n    wrapper,\n  }: Pick<RenderTemplateOptions<any>, 'declarations' | 'excludeComponentDeclaration' | 'wrapper'>,\n) {\n  if (typeof sut === 'string') {\n    return [...declarations, wrapper];\n  }\n\n  const components = () => (excludeComponentDeclaration || isStandalone(sut) ? [] : [sut]);\n  return [...declarations, ...components()];\n}\n\nfunction addAutoImports<SutType>(\n  sut: Type<SutType> | string,\n  { imports = [], routes }: Pick<RenderComponentOptions<any>, 'imports' | 'routes'>,\n) {\n  const animations = () => {\n    const animationIsDefined =\n      imports.indexOf(NoopAnimationsModule) > -1 || imports.indexOf(BrowserAnimationsModule) > -1;\n    return animationIsDefined ? [] : [NoopAnimationsModule];\n  };\n\n  const routing = () => (routes ? [RouterTestingModule.withRoutes(routes)] : []);\n  const components = () => (typeof sut !== 'string' && isStandalone(sut) ? [sut] : []);\n  return [...imports, ...components(), ...animations(), ...routing()];\n}\n\nasync function renderDeferBlock<SutType>(\n  fixture: ComponentFixture<SutType>,\n  deferBlockState: DeferBlockState,\n  deferBlockIndex?: number,\n) {\n  const deferBlockFixtures = await fixture.getDeferBlocks();\n\n  if (deferBlockIndex !== undefined) {\n    if (deferBlockIndex < 0) {\n      throw new Error('deferBlockIndex must be a positive number');\n    }\n\n    const deferBlockFixture = deferBlockFixtures[deferBlockIndex];\n    if (!deferBlockFixture) {\n      throw new Error(`Could not find a deferrable block with index '${deferBlockIndex}'`);\n    }\n    await deferBlockFixture.render(deferBlockState);\n  } else {\n    for (const deferBlockFixture of deferBlockFixtures) {\n      await deferBlockFixture.render(deferBlockState);\n    }\n  }\n}\n\n/**\n * Wrap waitFor to invoke the Angular change detection cycle before invoking the callback\n */\nasync function waitForWrapper<T>(\n  detectChanges: () => void,\n  callback: () => T extends Promise<any> ? never : T,\n  options?: dtlWaitForOptions,\n): Promise<T> {\n  let inFakeAsync = true;\n  try {\n    tick(0);\n  } catch (err) {\n    inFakeAsync = false;\n  }\n\n  return await dtlWaitFor(() => {\n    setTimeout(() => detectChanges(), 0);\n    if (inFakeAsync) {\n      tick(0);\n    }\n    return callback();\n  }, options);\n}\n\n/**\n * Wrap waitForElementToBeRemovedWrapper to poke the Angular change detection cycle before invoking the callback\n */\nasync function waitForElementToBeRemovedWrapper<T>(\n  detectChanges: () => void,\n  callback: (() => T) | T,\n  options?: dtlWaitForOptions,\n): Promise<void> {\n  let cb: () => T;\n  if (typeof callback !== 'function') {\n    const elements = (Array.isArray(callback) ? callback : [callback]) as Element[];\n    const getRemainingElements = elements.map((element) => {\n      let parent = element.parentElement as Element;\n      while (parent.parentElement) {\n        parent = parent.parentElement;\n      }\n      return () => (parent.contains(element) ? element : null);\n    });\n    cb = () => getRemainingElements.map((c) => c()).find(Boolean) as unknown as T;\n  } else {\n    cb = callback as () => T;\n  }\n\n  return await dtlWaitForElementToBeRemoved(() => {\n    const result = cb();\n    detectChanges();\n    return result;\n  }, options);\n}\n\nfunction cleanup() {\n  mountedFixtures.forEach(cleanupAtFixture);\n}\n\nfunction cleanupAtFixture(fixture: ComponentFixture<any>) {\n  fixture.destroy();\n\n  if (!fixture.nativeElement.getAttribute('ng-version') && fixture.nativeElement.parentNode === document.body) {\n    document.body.removeChild(fixture.nativeElement);\n  } else if (!fixture.nativeElement.getAttribute('id') && document.body.children?.[0] === fixture.nativeElement) {\n    document.body.removeChild(fixture.nativeElement);\n  }\n\n  mountedFixtures.delete(fixture);\n}\n\n// if we're running in a test runner that supports afterEach\n// then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this, set the ATL_SKIP_AUTO_CLEANUP env variable to 'true'\nif (typeof process === 'undefined' || !process.env?.ATL_SKIP_AUTO_CLEANUP) {\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  }\n}\n\n@Component({ selector: 'atl-wrapper-component', template: '' })\nclass WrapperComponent {}\n\n/**\n * Wrap findBy queries to poke the Angular change detection cycle\n */\nfunction replaceFindWithFindAndDetectChanges<T extends Record<string, any>>(originalQueriesForContainer: T): T {\n  return Object.keys(originalQueriesForContainer).reduce((newQueries, key) => {\n    const getByQuery = originalQueriesForContainer[key.replace('find', 'get')];\n    if (key.startsWith('find') && getByQuery) {\n      newQueries[key] = async (...queryOptions: any[]) => {\n        const waitOptions = queryOptions.length === 3 ? queryOptions.pop() : undefined;\n        // original implementation at https://github.com/testing-library/dom-testing-library/blob/main/src/query-helpers.js\n        return await waitForWrapper(detectChangesForMountedFixtures, () => getByQuery(...queryOptions), waitOptions);\n      };\n    } else {\n      newQueries[key] = originalQueriesForContainer[key];\n    }\n\n    return newQueries;\n  }, {} as Record<string, any>) as T;\n}\n\n/**\n * Call detectChanges for all fixtures\n */\nfunction detectChangesForMountedFixtures() {\n  mountedFixtures.forEach((fixture) => {\n    try {\n      fixture.detectChanges();\n    } catch (err: any) {\n      if (!err.message.startsWith('ViewDestroyedError')) {\n        throw err;\n      }\n    }\n  });\n}\n\n/**\n * Re-export screen with patched queries\n */\nconst screen = replaceFindWithFindAndDetectChanges(dtlScreen);\n\n/**\n * Re-export within with patched queries\n */\nconst within = <QueriesToBind extends Queries = typeof dtlQueries, T extends QueriesToBind = QueriesToBind>(\n  element: HTMLElement,\n  queriesToBind?: T,\n): BoundFunctions<T> => {\n  const container = dtlWithin<T>(element, queriesToBind);\n  return replaceFindWithFindAndDetectChanges(container);\n};\n\n/**\n * Re-export waitFor with patched waitFor\n */\nasync function waitFor<T>(callback: () => T extends Promise<any> ? never : T, options?: dtlWaitForOptions): Promise<T> {\n  return waitForWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Re-export waitForElementToBeRemoved with patched waitForElementToBeRemoved\n */\nasync function waitForElementToBeRemoved<T>(callback: (() => T) | T, options?: dtlWaitForOptions): Promise<void> {\n  return waitForElementToBeRemovedWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Manually export otherwise we get the following error while running Jest tests\n * TypeError: Cannot set property fireEvent of [object Object] which has only a getter\n * exports.fireEvent = fireEvent\n */\nexport {\n  fireEvent,\n  buildQueries,\n  getByLabelText,\n  getAllByLabelText,\n  queryByLabelText,\n  queryAllByLabelText,\n  findByLabelText,\n  findAllByLabelText,\n  getByPlaceholderText,\n  getAllByPlaceholderText,\n  queryByPlaceholderText,\n  queryAllByPlaceholderText,\n  findByPlaceholderText,\n  findAllByPlaceholderText,\n  getByText,\n  getAllByText,\n  queryByText,\n  queryAllByText,\n  findByText,\n  findAllByText,\n  getByAltText,\n  getAllByAltText,\n  queryByAltText,\n  queryAllByAltText,\n  findByAltText,\n  findAllByAltText,\n  getByTitle,\n  getAllByTitle,\n  queryByTitle,\n  queryAllByTitle,\n  findByTitle,\n  findAllByTitle,\n  getByDisplayValue,\n  getAllByDisplayValue,\n  queryByDisplayValue,\n  queryAllByDisplayValue,\n  findByDisplayValue,\n  findAllByDisplayValue,\n  getByRole,\n  getAllByRole,\n  queryByRole,\n  queryAllByRole,\n  findByRole,\n  findAllByRole,\n  getByTestId,\n  getAllByTestId,\n  queryByTestId,\n  queryAllByTestId,\n  findByTestId,\n  findAllByTestId,\n  createEvent,\n  getDefaultNormalizer,\n  getElementError,\n  getNodeText,\n  getQueriesForElement,\n  getRoles,\n  isInaccessible,\n  logDOM,\n  logRoles,\n  prettyDOM,\n  queries,\n  queryAllByAttribute,\n  queryByAttribute,\n  queryHelpers,\n} from '@testing-library/dom';\n\n// export patched dtl\nexport { screen, waitFor, waitForElementToBeRemoved, within };\n","/*\n * Public API Surface of testing-library\n */\n\nexport * from './lib/models';\nexport * from './lib/config';\nexport * from './lib/testing-library';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["dtlConfigure","dtlPrettyDOM","dtlGetQueriesForElement","dtlWaitFor","dtlWaitForElementToBeRemoved","dtlScreen","dtlWithin"],"mappings":"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"}